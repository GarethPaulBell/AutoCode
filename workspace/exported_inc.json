{
  "function_id": "042452ac-911e-40bd-aaa5-1769e176e724",
  "name": "inc",
  "description": "increment",
  "code_snippet": "function inc(x::Int)::Int\n    return x + 1\nend\n",
  "creation_date": "2025-08-17T16:57:06.858068",
  "last_modified_date": "2025-08-17T16:57:06.858068",
  "modules": [
    "misc"
  ],
  "tags": [
    "small"
  ],
  "unit_tests": [
    {
      "test_id": "be8dfbd9-3813-471e-a5da-87c0d875667a",
      "name": "smoke_inc",
      "description": "smoke test inc",
      "test_case": "function inc(x::Int)::Int\n    return x + 1\nend\n"
    },
    {
      "test_id": "054202af-5bf8-4a19-afcc-0ba62f76ee64",
      "name": "gen_inc",
      "description": "generate inc test",
      "test_case": "using Test\n\nfunction test_inc()\n    # Test increment by 1\n    @test inc(1) == 2\n    @test inc(0) == 1\n    @test inc(-1) == 0\n\n    # Test increment with zero\n    @test inc(0) == 1\n    @test inc(-0) == 1\n\n    # Test increment for large positive number\n    @test inc(1000) == 1001\n\n    # Test increment for large negative number\n    @test inc(-1000) == -999\n\n    # Test increment for decimal numbers\n    @test inc(2.5) == 3.5\n    @test inc(-2.7) == -1.7\n\n    # Test increment with non-integer result\n    @test inc(0.1) == 1.1\nend\n\ntest_inc()"
    }
  ]
}